

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author amol
 */
public class ConferencePaperDetailsFrame extends javax.swing.JFrame {

    /**
     * Creates new form ConferencePaperDetailsFrame
     */
    
    String strCheckoutDate, strDueDate;
    
    ArrayList<ConferencePaperDetails> confPaperList;
    ConferencePaperDetails selectedConf;
    
    public ConferencePaperDetailsFrame() {
        initComponents();
        populateConferenceList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jconfPaperList = new javax.swing.JList();
        confPaperCheckoutButton = new javax.swing.JButton();
        confPaperAuthorLabel = new javax.swing.JLabel();
        confNumLabel = new javax.swing.JLabel();
        confyearLabel = new javax.swing.JLabel();
        confCNameLabel = new javax.swing.JLabel();
        confPaperAvailLabel = new javax.swing.JLabel();
        cType = new javax.swing.JLabel();
        cNameLabel = new javax.swing.JLabel();
        checkoutDateLabel = new javax.swing.JLabel();
        checkoutDateTxtField = new javax.swing.JTextField();
        dueDateLabel = new javax.swing.JLabel();
        dueDateTxtField = new javax.swing.JTextField();
        confPaperQueueButton = new javax.swing.JButton();
        confPaperAuthorLabel1 = new javax.swing.JLabel();
        cType1 = new javax.swing.JLabel();
        confPaperAvailLabel1 = new javax.swing.JLabel();
        confCNameLabel1 = new javax.swing.JLabel();
        confyearLabel1 = new javax.swing.JLabel();
        cName1 = new javax.swing.JLabel();
        confNumLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jconfPaperList.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jconfPaperList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jconfPaperListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jconfPaperList);

        confPaperCheckoutButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confPaperCheckoutButton.setText("Checkout");
        confPaperCheckoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confPaperCheckoutButtonActionPerformed(evt);
            }
        });

        confPaperAuthorLabel.setBackground(new java.awt.Color(255, 255, 255));
        confPaperAuthorLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N

        confNumLabel.setBackground(new java.awt.Color(255, 255, 255));
        confNumLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N

        confyearLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N

        confCNameLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N

        confPaperAvailLabel.setBackground(new java.awt.Color(255, 255, 255));
        confPaperAvailLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N

        cType.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N

        cNameLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N

        checkoutDateLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        checkoutDateLabel.setText("Checkout date");

        checkoutDateTxtField.setText("2015/11/12 13:00");
        checkoutDateTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutDateTxtFieldActionPerformed(evt);
            }
        });

        dueDateLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        dueDateLabel.setText("Due date");

        dueDateTxtField.setText("2015/11/12 15:00");
        dueDateTxtField.setToolTipText("afafaf");
        dueDateTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dueDateTxtFieldActionPerformed(evt);
            }
        });

        confPaperQueueButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confPaperQueueButton.setText("Add to queue");
        confPaperQueueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confPaperQueueButtonActionPerformed(evt);
            }
        });

        confPaperAuthorLabel1.setBackground(new java.awt.Color(255, 255, 255));
        confPaperAuthorLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        confPaperAuthorLabel1.setText("Author");

        cType1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cType1.setText("Pub type");

        confPaperAvailLabel1.setBackground(new java.awt.Color(255, 255, 255));
        confPaperAvailLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        confPaperAvailLabel1.setText("avail");

        confCNameLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        confCNameLabel1.setText("Conf Name");

        confyearLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        confyearLabel1.setText("conf year");

        cName1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cName1.setText("Conf name");

        confNumLabel1.setBackground(new java.awt.Color(255, 255, 255));
        confNumLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        confNumLabel1.setText("conf num");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(44, Short.MAX_VALUE)
                        .addComponent(confPaperCheckoutButton)
                        .addGap(42, 42, 42)
                        .addComponent(confPaperQueueButton)
                        .addGap(50, 50, 50)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cType1)
                            .addComponent(confPaperAuthorLabel1)
                            .addComponent(confNumLabel1)
                            .addComponent(confyearLabel1)
                            .addComponent(confCNameLabel1)
                            .addComponent(confPaperAvailLabel1)
                            .addComponent(cName1))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confNumLabel)
                            .addComponent(confPaperAuthorLabel)
                            .addComponent(cNameLabel)
                            .addComponent(confyearLabel)
                            .addComponent(confCNameLabel)
                            .addComponent(confPaperAvailLabel)
                            .addComponent(cType)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkoutDateLabel)
                            .addComponent(dueDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dueDateTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(checkoutDateTxtField))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confPaperQueueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confPaperCheckoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confPaperAuthorLabel1)
                    .addComponent(confPaperAuthorLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confNumLabel1)
                    .addComponent(confNumLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cName1)
                    .addComponent(cNameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confyearLabel1)
                    .addComponent(confyearLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confCNameLabel1)
                    .addComponent(confCNameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confPaperAvailLabel1)
                    .addComponent(confPaperAvailLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cType1)
                    .addComponent(cType))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutDateLabel)
                    .addComponent(checkoutDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dueDateLabel)
                    .addComponent(dueDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confPaperCheckoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confPaperCheckoutButtonActionPerformed
        // TODO add your handling code here:
        strCheckoutDate = checkoutDateTxtField.getText();
        strDueDate = dueDateTxtField.getText();
        
        int index1 = strCheckoutDate.indexOf('/');
        int index2 = strCheckoutDate.lastIndexOf('/');
        
        int index3 = strDueDate.indexOf('/');
        int index4 = strDueDate.lastIndexOf('/');
        
        if(index1 != 4 && index2 != 7 && index3 != 4 && index4 != 7){
            JOptionPane.showMessageDialog(null, "Enter date in yyyy/mm/dd format");
        }
        
        DatabaseHelper.checkoutPublication(selectedConf.rid, PatronDetails.pid, selectedConf.cCheckoutDate, selectedConf.cDueDate);
        confPaperCheckoutButton.setEnabled(false);
        confPaperQueueButton.setEnabled(false);
        populateConferenceList();
    }//GEN-LAST:event_confPaperCheckoutButtonActionPerformed

    private void checkoutDateTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutDateTxtFieldActionPerformed

    }//GEN-LAST:event_checkoutDateTxtFieldActionPerformed

    private void dueDateTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dueDateTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dueDateTxtFieldActionPerformed

    private void confPaperQueueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confPaperQueueButtonActionPerformed
        // All checks implemented in database
        // Display corresponding messages
        strCheckoutDate = checkoutDateTxtField.getText();
        strDueDate = dueDateTxtField.getText();
        
        int index1 = strCheckoutDate.indexOf('/');
        int index2 = strCheckoutDate.lastIndexOf('/');
        
        int index3 = strDueDate.indexOf('/');
        int index4 = strDueDate.lastIndexOf('/');
        
        if(index1 != 4 && index2 != 7 && index3 != 4 && index4 != 7){
            JOptionPane.showMessageDialog(null, "Enter date in yyyy/mm/dd format");
        }
        DatabaseHelper.addPubToQueue(selectedConf.rid, PatronDetails.pid);
        confPaperCheckoutButton.setEnabled(false);
        confPaperQueueButton.setEnabled(false);
        populateConferenceList();
    }//GEN-LAST:event_confPaperQueueButtonActionPerformed

    private void jconfPaperListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jconfPaperListMouseReleased
        String title = (String) jconfPaperList.getSelectedValue();
        
        if(checkoutDateTxtField.getText().equals(""))
        {
             JOptionPane.showMessageDialog(null, "Enter checkout date");
        }
        else if(dueDateTxtField.getText().equals(""))
        {
             JOptionPane.showMessageDialog(null, "Enter due date");
        }
        
        else{
            for(ConferencePaperDetails confPaper : confPaperList){
                if(confPaper.cTitle == title){
                    confCNameLabel.setText(confPaper.cConfName);
                    confNumLabel.setText(confPaper.confNum);
                    confyearLabel.setText(confPaper.cYear);
                    cNameLabel.setText(confPaper.cName);
                    cType.setText(confPaper.pType);
                    //confPaperAvailLabel.setText(confPaper.cAvail);
                    //confPaperAvailLabel.setText("No");

                    //Author
                    String strAuthor = "";
                    for (String author : confPaper.authors) {
                        strAuthor += author + ", ";
                    }
                    confPaperAuthorLabel.setText(strAuthor);
                    selectedConf = confPaper;
                    break;
                }
            }
            System.out.println("title is "+ title);
        
            selectedConf.cCheckoutDate = checkoutDateTxtField.getText();
            selectedConf.cDueDate = dueDateTxtField.getText();
            
            System.out.println("checkout date "+ selectedConf.cCheckoutDate);
            System.out.println("due date "+ selectedConf.cDueDate);
           
            String avail = DatabaseHelper.getResourceAvail(selectedConf.rid, selectedConf.cCheckoutDate,selectedConf.cDueDate);
            confPaperAvailLabel.setText(avail);
            System.out.println("avail = " + avail);
            if(avail.charAt(0)=='1')
            {
                confPaperCheckoutButton.setEnabled(true);
                confPaperQueueButton.setEnabled(false);
            }
            else if(avail.charAt(0)=='0')
            {
                confPaperQueueButton.setEnabled(true);
                confPaperCheckoutButton.setEnabled(false);
            }
            else
                JOptionPane.showMessageDialog(null, "Could not get availability");
        }
    }//GEN-LAST:event_jconfPaperListMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConferencePaperDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConferencePaperDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConferencePaperDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConferencePaperDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConferencePaperDetailsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cName1;
    private javax.swing.JLabel cNameLabel;
    private javax.swing.JLabel cType;
    private javax.swing.JLabel cType1;
    private javax.swing.JLabel checkoutDateLabel;
    private javax.swing.JTextField checkoutDateTxtField;
    private javax.swing.JLabel confCNameLabel;
    private javax.swing.JLabel confCNameLabel1;
    private javax.swing.JLabel confNumLabel;
    private javax.swing.JLabel confNumLabel1;
    private javax.swing.JLabel confPaperAuthorLabel;
    private javax.swing.JLabel confPaperAuthorLabel1;
    private javax.swing.JLabel confPaperAvailLabel;
    private javax.swing.JLabel confPaperAvailLabel1;
    private javax.swing.JButton confPaperCheckoutButton;
    private javax.swing.JButton confPaperQueueButton;
    private javax.swing.JLabel confyearLabel;
    private javax.swing.JLabel confyearLabel1;
    private javax.swing.JLabel dueDateLabel;
    private javax.swing.JTextField dueDateTxtField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jconfPaperList;
    // End of variables declaration//GEN-END:variables

    private void populateConferenceList() {
         DefaultListModel dlm = new DefaultListModel();
        confPaperList =  DatabaseHelper.getConferencePapers();
        for(int i=0; i< confPaperList.size(); i++)
        {
            dlm.addElement(confPaperList.get(i).cTitle);
            System.out.println("Title is "+ confPaperList.get(i).cTitle);
        }
        jconfPaperList.setModel(dlm);
        System.out.println("in func populate conf paper list");
    }
}



import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author amol
 */
public class BookDetailsFrame extends javax.swing.JFrame {

    /**
     * Creates new form PublicationDetailsFrame
     */
    String strCheckoutDate, strDueDate;
    Date checkoutDate, dueDate;
    
    ArrayList<BookDetails> bookList;
    BookDetails selectedBook;
    
    
    public BookDetailsFrame() {
        initComponents();
        //bookAvailLabel.setText("No");
        
        try {
            populateBookList();
        } catch (SQLException ex) {
            Logger.getLogger(BookDetailsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        jBookList = new javax.swing.JList();
        bookQueueButton = new javax.swing.JButton();
        bookAuthorLabel = new javax.swing.JLabel();
        bookIsbnLabel = new javax.swing.JLabel();
        bookyearLabel = new javax.swing.JLabel();
        bookPublisherLabel = new javax.swing.JLabel();
        bookAvailLabel = new javax.swing.JLabel();
        bookTypeLabel = new javax.swing.JLabel();
        checkoutDateLabel = new javax.swing.JLabel();
        dueDateLabel = new javax.swing.JLabel();
        checkoutDateTxtField = new javax.swing.JTextField();
        dueDateTxtField = new javax.swing.JTextField();
        bookCheckoutButton = new javax.swing.JButton();
        bookAuthorLabel1 = new javax.swing.JLabel();
        bookIsbnLabel1 = new javax.swing.JLabel();
        bookyearLabel1 = new javax.swing.JLabel();
        bookPublisherLabel1 = new javax.swing.JLabel();
        bookAvailLabel1 = new javax.swing.JLabel();
        bookTypeLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jBookList.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jBookList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jBookListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jBookList);

        bookQueueButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bookQueueButton.setText("Add to queue");
        bookQueueButton.setEnabled(false);
        bookQueueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookQueueButtonActionPerformed(evt);
            }
        });

        bookAuthorLabel.setBackground(new java.awt.Color(255, 255, 255));
        bookAuthorLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N

        bookIsbnLabel.setBackground(new java.awt.Color(255, 255, 255));
        bookIsbnLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N

        bookyearLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        bookyearLabel.setToolTipText("");

        bookPublisherLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        bookPublisherLabel.setToolTipText("");

        bookAvailLabel.setBackground(new java.awt.Color(255, 255, 255));
        bookAvailLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        bookAvailLabel.setToolTipText("");

        bookTypeLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        bookTypeLabel.setToolTipText("");

        checkoutDateLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        checkoutDateLabel.setText("Checkout date");

        dueDateLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        dueDateLabel.setText("Due date");

        checkoutDateTxtField.setToolTipText("YYYY/MM/DD HH24:mi ");
        checkoutDateTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutDateTxtFieldActionPerformed(evt);
            }
        });

        dueDateTxtField.setToolTipText("YYYY/MM/DD HH24:mi ");
        dueDateTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dueDateTxtFieldActionPerformed(evt);
            }
        });

        bookCheckoutButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bookCheckoutButton.setText("Checkout");
        bookCheckoutButton.setEnabled(false);
        bookCheckoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookCheckoutButtonActionPerformed(evt);
            }
        });

        bookAuthorLabel1.setBackground(new java.awt.Color(255, 255, 255));
        bookAuthorLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        bookAuthorLabel1.setText("author");

        bookIsbnLabel1.setBackground(new java.awt.Color(255, 255, 255));
        bookIsbnLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        bookIsbnLabel1.setText("isbn");

        bookyearLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        bookyearLabel1.setText("year");

        bookPublisherLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        bookPublisherLabel1.setText("publisher");

        bookAvailLabel1.setBackground(new java.awt.Color(255, 255, 255));
        bookAvailLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        bookAvailLabel1.setText("avail");

        bookTypeLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        bookTypeLabel1.setText("Type");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookAuthorLabel1)
                            .addComponent(bookIsbnLabel1)
                            .addComponent(bookyearLabel1)
                            .addComponent(bookPublisherLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(bookTypeLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bookAvailLabel1, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookIsbnLabel)
                            .addComponent(bookAuthorLabel)
                            .addComponent(bookyearLabel)
                            .addComponent(bookPublisherLabel)
                            .addComponent(bookAvailLabel)
                            .addComponent(bookTypeLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkoutDateLabel)
                            .addComponent(dueDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(checkoutDateTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(dueDateTxtField)))))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(bookCheckoutButton)
                .addGap(32, 32, 32)
                .addComponent(bookQueueButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookAuthorLabel1)
                            .addComponent(bookAuthorLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookIsbnLabel1)
                            .addComponent(bookIsbnLabel))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookyearLabel1)
                            .addComponent(bookyearLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookPublisherLabel1)
                            .addComponent(bookPublisherLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookAvailLabel1)
                            .addComponent(bookAvailLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookTypeLabel1)
                            .addComponent(bookTypeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkoutDateLabel)
                            .addComponent(checkoutDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dueDateLabel)
                            .addComponent(dueDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookCheckoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookQueueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookQueueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookQueueButtonActionPerformed
        // insert into queue
        strCheckoutDate = checkoutDateTxtField.getText();
        strDueDate = dueDateTxtField.getText();
        
        int index1 = strCheckoutDate.indexOf('/');
        int index2 = strCheckoutDate.lastIndexOf('/');
        
        int index3 = strDueDate.indexOf('/');
        int index4 = strDueDate.lastIndexOf('/');
        
        if(index1 != 4 && index2 != 7 && index3 != 4 && index4 != 7){
            JOptionPane.showMessageDialog(null, "Enter date in yyyy/mm/dd format");
        }
        DatabaseHelper.addPubToQueue(selectedBook.rid, PatronDetails.pid);
        
        bookCheckoutButton.setEnabled(false);
        bookQueueButton.setEnabled(false);
        try {
            populateBookList();
        } catch (SQLException ex) {
            Logger.getLogger(BookDetailsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_bookQueueButtonActionPerformed

    private void checkoutDateTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutDateTxtFieldActionPerformed
      
    }//GEN-LAST:event_checkoutDateTxtFieldActionPerformed

    private void dueDateTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dueDateTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dueDateTxtFieldActionPerformed

    private void bookCheckoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookCheckoutButtonActionPerformed
        // TODO add your handling code here:
        strCheckoutDate = checkoutDateTxtField.getText();
        strDueDate = dueDateTxtField.getText();
        
        int index1 = strCheckoutDate.indexOf('/');
        int index2 = strCheckoutDate.lastIndexOf('/');
        
        int index3 = strDueDate.indexOf('/');
        int index4 = strDueDate.lastIndexOf('/');
        
        if(index1 != 4 && index2 != 7 && index3 != 4 && index4 != 7){
            JOptionPane.showMessageDialog(null, "Enter date in yyyy/mm/dd hh:mi format");
        }
        //insert into checkout table
        DatabaseHelper.checkoutPublication(selectedBook.rid, PatronDetails.pid, selectedBook.bCheckoutDate, selectedBook.bDueDate);
        bookCheckoutButton.setEnabled(false);
        bookQueueButton.setEnabled(false);
        try {
            populateBookList();
        } catch (SQLException ex) {
            Logger.getLogger(BookDetailsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bookCheckoutButtonActionPerformed

    private void jBookListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBookListMouseReleased
        // TODO add your handling code here:
        //BookDetails selectedBook;
        String title = (String) jBookList.getSelectedValue();
        if(checkoutDateTxtField.getText().equals(""))
        {
             JOptionPane.showMessageDialog(null, "Enter checkout date");
        }
        else if(dueDateTxtField.getText().equals(""))
        {
             JOptionPane.showMessageDialog(null, "Enter due date");
        }
       
        else{
            for(BookDetails book : bookList){
                if(book.bTitle == title){
                    bookPublisherLabel.setText(book.bPublisher);
                    bookIsbnLabel.setText(book.isbn);
                    bookyearLabel.setText(book.bYear);
                    bookAvailLabel.setText("Yes");
                    bookTypeLabel.setText(book.pType);

                    //Author
                    String strAuthor = "";

                    for (String author : book.authors) {
                        strAuthor += author + ", ";
                    }
                    bookAuthorLabel.setText(strAuthor);
                    selectedBook = book;
                    break;
                }
            }
            System.out.println("title is "+ title);
            selectedBook.bCheckoutDate = checkoutDateTxtField.getText();
            selectedBook.bDueDate = dueDateTxtField.getText();
            
            //System.out.println("checkout date "+ selectedBook.bCheckoutDate);
           
            String avail = DatabaseHelper.getResourceAvail(selectedBook.rid, selectedBook.bCheckoutDate,selectedBook.bDueDate);
            bookAvailLabel.setText(avail);
            System.out.println("avail = " + avail);
            if(avail.charAt(0)=='1')
            {
                bookCheckoutButton.setEnabled(true);
                bookQueueButton.setEnabled(false);
            }
            else if(avail.charAt(0)=='0'){
                bookQueueButton.setEnabled(true);
                bookCheckoutButton.setEnabled(false);
            }
            else
                JOptionPane.showMessageDialog(null, "Could not get availability");
        }

    }//GEN-LAST:event_jBookListMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookDetailsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bookAuthorLabel;
    private javax.swing.JLabel bookAuthorLabel1;
    private javax.swing.JLabel bookAvailLabel;
    private javax.swing.JLabel bookAvailLabel1;
    private javax.swing.JButton bookCheckoutButton;
    private javax.swing.JLabel bookIsbnLabel;
    private javax.swing.JLabel bookIsbnLabel1;
    private javax.swing.JLabel bookPublisherLabel;
    private javax.swing.JLabel bookPublisherLabel1;
    private javax.swing.JButton bookQueueButton;
    private javax.swing.JLabel bookTypeLabel;
    private javax.swing.JLabel bookTypeLabel1;
    private javax.swing.JLabel bookyearLabel;
    private javax.swing.JLabel bookyearLabel1;
    private javax.swing.JLabel checkoutDateLabel;
    private javax.swing.JTextField checkoutDateTxtField;
    private javax.swing.JLabel dueDateLabel;
    private javax.swing.JTextField dueDateTxtField;
    private javax.swing.JList jBookList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    // End of variables declaration//GEN-END:variables

    
    private void populateBookList() throws SQLException {
        
        DefaultListModel dlm = new DefaultListModel();
        
        bookList =  DatabaseHelper.getBooks();
        for(int i=0; i< bookList.size(); i++)
        {
            BookDetails book = bookList.get(i);
            dlm.addElement(book.bTitle);
            
        }
        jBookList.setModel(dlm);
        //testing
        
        
        
    }
}

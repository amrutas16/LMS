

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author amol
 */
public class JournalDetailsFrame extends javax.swing.JFrame {

    /**
     * Creates new form JournalDetailsFrame
     */
    String strCheckoutDate, strDueDate;
  
    ArrayList<JournalDetails> journalList;
    JournalDetails selectedJournal;
    
    public JournalDetailsFrame() {
        initComponents();
        populateJournalList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jJournalList = new javax.swing.JList();
        journalCheckoutButton = new javax.swing.JButton();
        journalAuthorLabel = new javax.swing.JLabel();
        issnLabel = new javax.swing.JLabel();
        journalyearLabel = new javax.swing.JLabel();
        journalAvail = new javax.swing.JLabel();
        jType = new javax.swing.JLabel();
        dueDateLabel = new javax.swing.JLabel();
        checkoutDateLabel = new javax.swing.JLabel();
        checkoutDateTxtField = new javax.swing.JTextField();
        dueDateTxtField = new javax.swing.JTextField();
        journalAuthorLabel1 = new javax.swing.JLabel();
        issnLabel1 = new javax.swing.JLabel();
        journalyearLabel1 = new javax.swing.JLabel();
        journalAvail1 = new javax.swing.JLabel();
        jType1 = new javax.swing.JLabel();
        journalQueueButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jJournalList.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jJournalList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jJournalListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jJournalList);

        journalCheckoutButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        journalCheckoutButton.setText("Checkout");
        journalCheckoutButton.setEnabled(false);
        journalCheckoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                journalCheckoutButtonActionPerformed(evt);
            }
        });

        journalAuthorLabel.setBackground(new java.awt.Color(255, 255, 255));
        journalAuthorLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        journalAuthorLabel.setText("Author");

        issnLabel.setBackground(new java.awt.Color(255, 255, 255));
        issnLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        issnLabel.setText("issn");

        journalyearLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        journalyearLabel.setText("journal year");

        journalAvail.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        journalAvail.setText("avail");

        jType.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        jType.setText("pub type");

        dueDateLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        dueDateLabel.setText("Due date");

        checkoutDateLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        checkoutDateLabel.setText("Checkout date");

        checkoutDateTxtField.setText("2015/11/12 13:00");
        checkoutDateTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutDateTxtFieldActionPerformed(evt);
            }
        });

        dueDateTxtField.setText("2015/11/12 15:00");
        dueDateTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dueDateTxtFieldActionPerformed(evt);
            }
        });

        journalAuthorLabel1.setBackground(new java.awt.Color(255, 255, 255));
        journalAuthorLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        journalAuthorLabel1.setText("Author");

        issnLabel1.setBackground(new java.awt.Color(255, 255, 255));
        issnLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        issnLabel1.setText("issn");

        journalyearLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        journalyearLabel1.setText("journal year");

        journalAvail1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        journalAvail1.setText("avail");

        jType1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        jType1.setText("pub type");

        journalQueueButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        journalQueueButton.setText("Add to queue");
        journalQueueButton.setEnabled(false);
        journalQueueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                journalQueueButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(journalCheckoutButton)
                        .addGap(18, 18, 18)
                        .addComponent(journalQueueButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(issnLabel1)
                            .addComponent(journalAuthorLabel1)
                            .addComponent(journalyearLabel1)
                            .addComponent(journalAvail1)
                            .addComponent(jType1))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(journalAuthorLabel)
                                .addGap(72, 72, 72))
                            .addComponent(issnLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(journalyearLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(journalAvail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jType, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkoutDateLabel)
                            .addComponent(dueDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkoutDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dueDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(journalAuthorLabel1)
                            .addComponent(journalAuthorLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(issnLabel1)
                            .addComponent(issnLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(journalyearLabel1)
                            .addComponent(journalyearLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(journalAvail1)
                            .addComponent(journalAvail))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jType1)
                            .addComponent(jType))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkoutDateLabel)
                            .addComponent(checkoutDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dueDateLabel)
                            .addComponent(dueDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(journalCheckoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(journalQueueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void journalCheckoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_journalCheckoutButtonActionPerformed
        // All checks done in db
        // Display corresponding message
        
        strCheckoutDate = checkoutDateTxtField.getText();
        strDueDate = dueDateTxtField.getText();
        
        int index1 = strCheckoutDate.indexOf('/');
        int index2 = strCheckoutDate.lastIndexOf('/');
        
        int index3 = strDueDate.indexOf('/');
        int index4 = strDueDate.lastIndexOf('/');
        
        if(index1 != 4 && index2 != 7 && index3 != 4 && index4 != 7){
            JOptionPane.showMessageDialog(null, "Enter date in yyyy/mm/dd hh24:mi format");
        }
        DatabaseHelper.checkoutPublication(selectedJournal.rid, PatronDetails.pid, selectedJournal.jCheckoutDate, selectedJournal.jDueDate);
        journalCheckoutButton.setEnabled(false);
        journalQueueButton.setEnabled(false);
        populateJournalList();
        
      
    }//GEN-LAST:event_journalCheckoutButtonActionPerformed

    private void checkoutDateTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutDateTxtFieldActionPerformed
       
    }//GEN-LAST:event_checkoutDateTxtFieldActionPerformed

    private void dueDateTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dueDateTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dueDateTxtFieldActionPerformed

    private void journalQueueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_journalQueueButtonActionPerformed
        // All checks implemented in database
        // Display corresponding messages
        strCheckoutDate = checkoutDateTxtField.getText();
        strDueDate = dueDateTxtField.getText();
        
        int index1 = strCheckoutDate.indexOf('/');
        int index2 = strCheckoutDate.lastIndexOf('/');
        
        int index3 = strDueDate.indexOf('/');
        int index4 = strDueDate.lastIndexOf('/');
        
        if(index1 != 4 && index2 != 7 && index3 != 4 && index4 != 7){
            JOptionPane.showMessageDialog(null, "Enter date in yyyy/mm/dd format");
        }
        
        DatabaseHelper.addPubToQueue(selectedJournal.rid, PatronDetails.pid);
        journalCheckoutButton.setEnabled(false);
        journalQueueButton.setEnabled(false);
        populateJournalList();

    }//GEN-LAST:event_journalQueueButtonActionPerformed

    private void jJournalListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jJournalListMouseReleased
        String title = (String) jJournalList.getSelectedValue();
        if(checkoutDateTxtField.getText().equals(""))
        {
             JOptionPane.showMessageDialog(null, "Enter checkout date");
        }
        else if(dueDateTxtField.getText().equals(""))
        {
             JOptionPane.showMessageDialog(null, "Enter due date");
        }
        else{
            for(JournalDetails journal : journalList){
                if(journal.jTitle == title){
                    
                    issnLabel.setText(journal.issn);
                    journalyearLabel.setText(journal.jYear);
                    
                    journalAvail.setText("Yes");
                    jType.setText(journal.pType);
                    
                    //Author
                    String strAuthor = "";

                    for (String author : journal.authors) {
                        strAuthor += author + ", ";
                    }
                    journalAuthorLabel.setText(strAuthor);
                    selectedJournal = journal;
                    break;
                }
            }
            System.out.println("title is "+ title);

            selectedJournal.jCheckoutDate = checkoutDateTxtField.getText();
            selectedJournal.jDueDate = dueDateTxtField.getText();
            
            //System.out.println("checkout date "+ selectedBook.bCheckoutDate);
           
            String avail = DatabaseHelper.getResourceAvail(selectedJournal.rid, selectedJournal.jCheckoutDate,selectedJournal.jDueDate);
            journalAvail.setText(avail);
            System.out.println("avail = " + avail);
            if(avail.charAt(0)=='1')
            {
                journalCheckoutButton.setEnabled(true);
                journalQueueButton.setEnabled(false);
            }
            else if(avail.charAt(0)=='0')
            {
                journalQueueButton.setEnabled(true);
                journalCheckoutButton.setEnabled(false);
            }
            else
                JOptionPane.showMessageDialog(null, "Could not get availability");
        }
    }//GEN-LAST:event_jJournalListMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JournalDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JournalDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JournalDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JournalDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JournalDetailsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel checkoutDateLabel;
    private javax.swing.JTextField checkoutDateTxtField;
    private javax.swing.JLabel dueDateLabel;
    private javax.swing.JTextField dueDateTxtField;
    private javax.swing.JLabel issnLabel;
    private javax.swing.JLabel issnLabel1;
    private javax.swing.JList jJournalList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jType;
    private javax.swing.JLabel jType1;
    private javax.swing.JLabel journalAuthorLabel;
    private javax.swing.JLabel journalAuthorLabel1;
    private javax.swing.JLabel journalAvail;
    private javax.swing.JLabel journalAvail1;
    private javax.swing.JButton journalCheckoutButton;
    private javax.swing.JButton journalQueueButton;
    private javax.swing.JLabel journalyearLabel;
    private javax.swing.JLabel journalyearLabel1;
    // End of variables declaration//GEN-END:variables

    private void populateJournalList() {
        DefaultListModel dlm = new DefaultListModel();
        journalList =  DatabaseHelper.getJournals();
        for(int i=0; i< journalList.size(); i++)
        {
            dlm.addElement(journalList.get(i).jTitle);
            
        }
        jJournalList.setModel(dlm);
        System.out.println("in func populate journal list");
    }
    
}


import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author amol
 */
public class CameraFrame extends javax.swing.JFrame {

    /**
     * Creates new form CameraFrame
     */
    CameraDetails selectedCamera;
    
    ArrayList<CameraDetails> cameraList;
    public CameraFrame(){
        initComponents();
       // populateCameraList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cameraMakeLabel = new javax.swing.JLabel();
        lensConfigLabel = new javax.swing.JLabel();
        memoryLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jCameraList = new javax.swing.JList();
        cameraReserveButton = new javax.swing.JButton();
        cameraCheckoutDateLabel = new javax.swing.JLabel();
        cameraCheckoutDateTxtField = new javax.swing.JTextField();
        cameraModelLabel = new javax.swing.JLabel();
        cameraSearchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cameraMakeLabel.setBackground(new java.awt.Color(255, 255, 255));
        cameraMakeLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cameraMakeLabel.setText("Make");

        lensConfigLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        lensConfigLabel.setText("Lens config");

        memoryLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        memoryLabel.setText("Memory");

        jCameraList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCameraListMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jCameraList);

        cameraReserveButton.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cameraReserveButton.setText("Reserve");
        cameraReserveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cameraReserveButtonActionPerformed(evt);
            }
        });

        cameraCheckoutDateLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cameraCheckoutDateLabel.setText("Checkout date");

        cameraCheckoutDateTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cameraCheckoutDateTxtFieldActionPerformed(evt);
            }
        });

        cameraModelLabel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cameraModelLabel.setText("Model");

        cameraSearchButton.setText("searchAvailable");
        cameraSearchButton.setName(""); // NOI18N
        cameraSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cameraSearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(cameraReserveButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cameraCheckoutDateLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cameraCheckoutDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cameraSearchButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cameraMakeLabel)
                                    .addComponent(lensConfigLabel)
                                    .addComponent(memoryLabel)
                                    .addComponent(cameraModelLabel))))))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cameraMakeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(lensConfigLabel)
                        .addGap(18, 18, 18)
                        .addComponent(memoryLabel)
                        .addGap(18, 18, 18)
                        .addComponent(cameraModelLabel)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cameraCheckoutDateLabel)
                    .addComponent(cameraCheckoutDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cameraSearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(cameraReserveButton)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cameraCheckoutDateTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cameraCheckoutDateTxtFieldActionPerformed

    }//GEN-LAST:event_cameraCheckoutDateTxtFieldActionPerformed

    private void cameraReserveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cameraReserveButtonActionPerformed
try {
            // call procedures
            int c =DatabaseHelper.insertCamera(selectedCamera,cameraCheckoutDateTxtField.getText());
            String dis="Your Queue Count is "+c ;
            JOptionPane.showMessageDialog(null,dis );
            
            //System.out.println(selectedCamera.lensConfig);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage() );
        }        
        //System.out.println(selectedCamera.lensConfig);
    }//GEN-LAST:event_cameraReserveButtonActionPerformed

    private void jCameraListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCameraListMouseReleased
       String camId = (String) jCameraList.getSelectedValue();
        if(cameraCheckoutDateTxtField.getText().equals(""))
        {
             JOptionPane.showMessageDialog(null, "Enter checkout date");
        }
        
        else{
            for(CameraDetails camera : cameraList){
                if(camera.camId == camId ){
                    cameraMakeLabel.setText(camera.make);
                    memoryLabel.setText(camera.memory);
                    lensConfigLabel.setText(camera.lensConfig);
                    cameraModelLabel.setText(camera.model);
                    selectedCamera = camera;
                 
                }
            }
        }
    }//GEN-LAST:event_jCameraListMouseReleased

    private void cameraSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cameraSearchButtonActionPerformed
String date=cameraCheckoutDateTxtField.getText();
       System.out.println(date);
if (isValidDate(date))
    {
        
    populateCameraList(date);
    }
else
    JOptionPane.showMessageDialog(null, "Invalid Date or Not Friday ");
     
    
            
        

        // TODO add your handling code here:
    }//GEN-LAST:event_cameraSearchButtonActionPerformed

static boolean isValidDate(String input) {
    try{
         SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
         format.setLenient(false);
          Date date =format.parse(input);
          
       
        Calendar cal = Calendar.getInstance();
  
        cal.setTime(date);
        System.out.println(date);
        boolean friday = cal.get(Calendar.DAY_OF_WEEK) == Calendar.FRIDAY;
        
          return friday;
     }
     catch(ParseException e){
          return false;
     }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CameraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CameraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CameraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CameraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CameraFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cameraCheckoutDateLabel;
    private javax.swing.JTextField cameraCheckoutDateTxtField;
    private javax.swing.JLabel cameraMakeLabel;
    private javax.swing.JLabel cameraModelLabel;
    private javax.swing.JButton cameraReserveButton;
    private javax.swing.JButton cameraSearchButton;
    private javax.swing.JList jCameraList;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lensConfigLabel;
    private javax.swing.JLabel memoryLabel;
    // End of variables declaration//GEN-END:variables

    private void populateCameraList(String date){
        DefaultListModel dlm = new DefaultListModel();
        
        cameraList =  DatabaseHelper.getCameras();
        for(int i=0; i< cameraList.size(); i++)
        {
            dlm.addElement(cameraList.get(i).camId);
            
        }
        jCameraList.setModel(dlm);
        //testing
        System.out.println("in func populate camera list");
        
        
    }
}
